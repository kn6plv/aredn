{%
/*
 * Part of AREDN速 -- Used for creating Amateur Radio Emergency Data Networks
 * Copyright (C) 2024 Tim Wilkinson
 * See Contributors file for additional contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional Terms:
 *
 * Additional use restrictions exist on the AREDN速 trademark and logo.
 * See AREDNLicense.txt for more info.
 *
 * Attributions to the AREDN速 Project must be retained in the source code.
 * If importing this code into a new or existing project attribution
 * to the AREDN速 project must be added to the source code.
 *
 * You must not misrepresent the origin of the material contained within.
 *
 * Modified versions must be modified to attribute to the original source
 * and be marked in reasonable ways as differentiate it from the original
 * version
 */
%}
{%
if (request.env.REQUEST_METHOD === "PUT") {
    configuration.prepareChanges();
    if ("lowmem" in request.args) {
        uciMesh.set("aredn", "@meshstatus[0]", "lowmem", request.args.lowmem);
    }
    if ("lowroutes" in request.args) {
        uciMesh.set("aredn", "@meshstatus[0]", "lowmem", request.args.lowroutes);
    }
    uciMesh.commit("aredn");
    print(_R("changes"));
    return;
}
if (request.env.REQUEST_METHOD === "DELETE") {
    configuration.revertModalChanges();
    print(_R("changes"));
    return;
}
%}
<div class="dialog">
    {{_R("dialog-header", "Mesh")}}
    <div>
        <div class="cols">
            <div>
                <div class="o">Low Memory Visiblity</div>
                <div class="m">Low memory limit to restrict visible mesh</div>
            </div>
            <div style="flex:0">
                <input hx-put="{{request.env.REQUEST_URI}}" type="text" name="lowmem" placeholder="10000" pattern="[0-9]+" value="{{uciMesh.get("aredn"," @meshstatus[0]", "lowmem")}}">
            </div>
        </div>
        <div class="cols">
            <div>
                <div class="o">Mesh Limit</div>
                <div class="m">Low memory limit for number of routes displayed</div>
            </div>
            <div style="flex:0">
                <input hx-put="{{request.env.REQUEST_URI}}" type="text" name="lowroutes" placeholder="1000" pattern="[0-9]+" value="{{uciMesh.get("aredn"," @meshstatus[0]", "lowroutes")}}">
            </div>
        </div>
    </div>
    {{_R("dialog-footer")}}
    <script>
    (function(){
    {{_R("open")}}
    })();
    </script>
</div>
