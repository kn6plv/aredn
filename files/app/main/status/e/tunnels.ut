{% if (request.env.REQUEST_METHOD === "PUT") {
    configuration.prepareChanges();
%}
{{ _R("changes") }}
{% return; } %}
{%
    const tunnels = [];
%}
<dialog>
    {{ _R("dialog-header", "Tunnels") }}
    <div>
        <div id="tunnel-templates" class="cols">
            <div>
                <div class="o">Add tunnel</div>
                <div class="m">Add a tunnel from a template</div>
            </div>
            <div style="flex:0;padding-right:10px">
                <select style="direction:ltr">
                    <option value="wgclient">Wireguard Client</option>
                    <option value="wgserver">Wireguard Server</option>
                    <option value="lgclient">Legacy Client</option>
                    <option value="lgserver">Legacy Server</option>
                </select>
            </div>
            <button>+</button>
        </div>
        <br>
        <div class="o">Tunnels</div>
        <div id="tunnels">{%
                for (let i = 0; i < length(tunnels); i++) {
            %}
        {% } %}</div>
    </div>
    {{ _R("dialog-footer") }}
    <script>
        htmx.on("#tunnel-templates button", "click", _ => {
            const v = htmx.find("#tunnel-templates select").value;
            const div = document.createElement("div");
            switch (v) {
                case "wgclient":
                    div.innerHTML = `<div class="cols" style="padding-bottom:10px">
<div class="cols">
    <div style="flex:0;padding:10px">WG</div>
    <div>
        <div><input  style="width:100%"type="text" value="SERVER"></div>
        <div class="cols">
            <div><input type="text" value="KEY"></div>
            <div><input type="text" value="IP"></div>
        </div>
        <div><input style="width:100%" type="text" value="COMMENT"></div>
    </div>
    <div style="flex:0;padding:10px 10px 0 10px">
    <div class="icon cloud" style="scale:0.7;margin-left:15px;width:32px;height:32px"></div>
    {{ _R("switch", { name: "enable", value: true }) }}
</div>
<button>-</button>
</div>`;
                    break;
                case "lgclient":
                    div.innerHTML = `<div>
<div><input type="text" value="SERVER"></div><div><input type="text" value="PWD"></div><div><input type="text" value="NET"></div><div>ENABLED</div><div>STATUS</div>
</div>`;
                    break;
                case "wgserver":
                    div.innerHTML = `<div>
<div><input type="text" value="NODE"></div><div>KEY</div><div>IP</div><div>COMMENT</div><div>ENABLED</div><div>STATUS</div>
</div>`;
                    break;
                case "lgserver":
                    div.innerHTML = `<div>
<div><input type="text" value="NODE"></div><div><input type="text" value="PWD"></div><div>NET</div><div>COMMENT</div><div>ENABLED</div><div>STATUS</div>
</div>`;
                    break;
                default:
                    break;
            }
            htmx.find("#tunnels").appendChild(div.firstChild);
        });
    </script>
</dialog>
