{%
    const d = split(fs.readfile("/proc/uptime"), " ");
    const up = int(d[0]);
    let uptime = sprintf("%d:%02d", int(up / 3600) % 24, int(up / 60) % 60);
    if (up >= 172800) {
        uptime = int(up / 86400) + " days, " + uptime;
    }
    else if (up > 86400) {
        uptime = "1 day, " + uptime;
    }
    const ld = split(fs.readfile("/proc/loadavg"), " ");
    const ram = int(match(fs.readfile("/proc/meminfo"), /MemFree: +(\d+) kB/)[1]) / 1000.0;
    const f = fs.popen("exec /bin/df /");
    let flash = "-";
    if (f) {
        flash = int(split(f.read("all"), /\s+/)[10]) / 1000.0;
        f.close();
    }
    const tm = localtime();
%}
<div class="health" hx-get="health" hx-swap="outerHTML" hx-trigger="every 30s [document.visibilityState === 'visible'], visibilitychange[document.visibilityState === 'visible'] from:document">
    <div class="ctrl" hx-get="status/e/time" hx-swap="innerHTML" hx-target="#ctrl-modal">
        <div class="t">{{ tm.hour === 0 ? "12" : tm.hour > 12 ? tm.hour - 12 : tm.hour }}:{{ sprintf("%02d", tm.min) }} {{ tm.hour >= 12 ? "pm" : "am" }}</div>
        <div class="s">time</div>
    </div>
    <div class="noctrl">
        <div class="t">{{ uptime }}</div>
        <div class="s">uptime</div>
        <div class="t">{{ ld[0] }}, {{ ld[1] }}, {{ ld[2] }}</div>
        <div class="s">load</div>
        <div class="cols">
            <div>
                <div class="t">{{ flash }} MB</div>
                <div class="s">free flash</div>
            </div>
            <div>
                <div class="t">{{ ram }} MB</div>
                <div class="s">free ram</div>
            </div>
            <div></div>
        </div>
    </div>
</div>
