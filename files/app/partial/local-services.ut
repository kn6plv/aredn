{%
    const reService = regexp("^([^|]+)\\|(tcp|udp)\\|(.+)\\s+#([0-9.]+).*$");
    const reUrl = regexp("^(.+://)([^:]+):(\\d+)(.*)$");
    const localhosts = {};
    const trackers = lqm.getTrackers();
    for (t in trackers) {
        const tracker = trackers[t];
        if (tracker.ip) {
            localhosts[tracker.ip] = true;
            if (tracker.hostname) {
                const ip = network.getIPAddressFromHostname(tracker.hostname);
                if (ip) {
                    localhosts[ip] = true;
                }
            }
        }
        
    }
    const services = [];
    const f = fs.open("/var/run/services_olsr");
    if (f) {
        for (;;) {
            const l = f.read("line");
            if (!length(l)) {
                break;
            }
            const v = match(l, reService);
            // v[1] == url, v[3] == name, v[4] == ip address
            if (v && localhosts[v[4]]) {
                const r = match(v[1], reUrl);
                switch (r ? r[3] : "i") {
                    case "0":
                        push(services, `<div class="service">${v[3]}</div>`);
                        break;
                    case "80":
                    case "443":
                        push(services, `<div class="service"><a href="${r[1]}${r[2]}.local.mesh${r[4]}">${v[3]}</a></div>`);
                        break;
                    default:
                        push(services, `<div class="service"><a href="${r[1]}${r[2]}.local.mesh:${r[3]}${r[4]}">${v[3]}</a></div>`);
                        break;
                    case "i":
                        break;
                }
            }
        }
        f.close();
    }
%}
<div class="ctrl" hx-get="status/e/local-services" hx-target="#ctrl-modal">
    <div class="section-title">Local Services</div>
    <div class="section">
    {%
        if (length(services) === 0) {
            print("None");
        }
        else {
            print("<div class='local-services cols'><div hx-trigger='consume'>");
            for (let i = 0; i < length(services); i += 2) {
                print(services[i]);
            }
            print("</div><div hx-trigger='consume'>");
            for (let i = 1; i < length(services); i += 2) {
                print(services[i]);
            }
            print("</div></div>");
        }
    %}
    </div>
</div>
